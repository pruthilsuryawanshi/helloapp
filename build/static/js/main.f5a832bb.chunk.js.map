{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","details","user","detail","handleInput","e","setState","target","name","value","handleSubmit","preventDefault","axios","post","quote","then","res","catch","err","data","get","console","log","className","onSubmit","this","id","type","placeholder","aria-label","aria-describedby","onChange","map","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAkGeA,E,4MA7FbC,MAAQ,CACNC,QAAS,GACTC,KAAM,GACNC,OAAQ,I,EAiBVC,YAAc,SAACC,GACb,EAAKC,SAAL,eACGD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAI9BC,aAAe,SAACL,GACdA,EAAEM,iBAEFC,IACGC,KAAK,6BAA8B,CAClCL,KAAM,EAAKR,MAAME,KACjBC,OAAQ,EAAKH,MAAMc,QAEpBC,MAAK,SAACC,GACL,EAAKV,SAAS,CACZJ,KAAM,GACNY,MAAO,QAGVG,OAAM,SAACC,Q,kEAlCS,IAEfC,EAFc,OAIlBP,IAAMQ,IAAI,8BACPL,MAAK,SAAAC,GACJG,EAAOH,EAAIG,KACX,EAAKb,SAAS,CACZL,QAASkB,OAGZF,OAAM,SAAAC,GAASG,QAAQC,IAAIJ,Q,+BA2B9B,OACE,8BACE,sBAAKK,UAAU,uBAAf,UACE,uBAAMC,SAAUC,KAAKf,aAArB,UACE,sBAAKa,UAAU,mBAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,uBAAMA,UAAU,mBAAmBG,GAAG,eAAtC,UACG,IADH,UACe,SAGjB,uBAAOC,KAAK,OAAOJ,UAAU,eAC3BK,YAAY,0BACZC,aAAW,WACXC,mBAAiB,eACjBrB,MAAOgB,KAAKzB,MAAME,KAAMM,KAAK,OAC7BuB,SAAUN,KAAKrB,iBAGnB,sBAAKmB,UAAU,mBAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,sBAAMA,UAAU,mBAAhB,0BAEF,0BAAUA,UAAU,gBAClBM,aAAW,gBACXD,YAAY,kCACZnB,MAAOgB,KAAKzB,MAAMc,MAAON,KAAK,QAC9BuB,SAAUN,KAAKrB,iBAGnB,wBAAQuB,KAAK,SAASJ,UAAU,uBAAhC,uBAGDE,KAAKzB,MAAMC,QAAQ+B,KAAI,SAAC7B,EAAQuB,GAAT,OACtB,8BACE,8BACE,gCACE,+BAAKvB,EAAOA,OAAZ,OACA,6CAAiBA,EAAOK,KAAxB,aAJIkB,e,GA/EJO,IAAMC,WCSTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f5a832bb.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nclass App extends React.Component {\n\n  state = {\n    details: [],\n    user: \"\",\n    detail: \"\",\n  }\n\n  componentDidMount() {\n\n    let data;\n\n    axios.get('http://localhost:8000/wel/')\n      .then(res => {\n        data = res.data;\n        this.setState({\n          details: data\n        });\n      })\n      .catch(err => { console.log(err) })\n  }\n\n  handleInput = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    axios\n      .post(\"http://localhost:8000/wel/\", {\n        name: this.state.user,\n        detail: this.state.quote,\n      })\n      .then((res) => {\n        this.setState({\n          user: \"\",\n          quote: \"\",\n        });\n      })\n      .catch((err) => { });\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"container jumbotron \">\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"input-group mb-3\">\n              <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\" id=\"basic-addon1\">\n                  {\" \"} Author{\" \"}\n                </span>\n              </div>\n              <input type=\"text\" className=\"form-control\"\n                placeholder=\"Name of the Poet/Author\"\n                aria-label=\"Username\"\n                aria-describedby=\"basic-addon1\"\n                value={this.state.user} name=\"user\"\n                onChange={this.handleInput} />\n            </div>\n\n            <div className=\"input-group mb-3\">\n              <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\">Your Quote</span>\n              </div>\n              <textarea className=\"form-control \"\n                aria-label=\"With textarea\"\n                placeholder=\"Tell us what you think of .....\"\n                value={this.state.quote} name=\"quote\"\n                onChange={this.handleInput}>\n              </textarea>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary mb-5\">Submit</button>\n          </form>\n\n          {this.state.details.map((detail, id) => (\n            <div key={id}>\n              <div >\n                <div >\n                  <h1>{detail.detail} </h1>\n                  <footer > -- by {detail.name} </footer>\n                </div>\n              </div>\n            </div>\n          )\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}